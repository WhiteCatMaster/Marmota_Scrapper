name: Scan Kavita Library & Send Telegram Notif.

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'

jobs:
  scan-library-and-notify:
    # This tells GitHub to run the job on your self-hosted machine
    runs-on: self-hosted 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install requests

      - name: Run the Python script
        env:
          KAVITA_TOKEN: ${{ secrets.KAVITA_TOKEN }}
          KAVITA_URL: 'http://localhost:5000' # Ahora sí, este localhost funcionará
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_TO }}
        run: |
          python - <<EOF
          import requests
          import os

          kavita_token = os.getenv('KAVITA_TOKEN')
          kavita_url = os.getenv('KAVITA_URL')
          telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
          chat_id = os.getenv('TELEGRAM_CHAT_ID')

          if not all([kavita_token, telegram_token, chat_id]):
              print('Error: Missing GitHub secrets. Ensure all required tokens are configured.')
              exit(1)

          kavita_success = False
          message_text = ''
          try:
              response = requests.post(f'{kavita_url}/api/library/scan', headers={'Authorization': f'Bearer {kavita_token}'})
              response.raise_for_status()
              kavita_success = True
              message_text = '✅ *Kavita library scan initiated successfully.*'
          except requests.exceptions.RequestException as e:
              message_text = f'❌ *Error initiating Kavita scan:*\n\n`{e}`'

          try:
              telegram_api_url = f'https://api.telegram.org/bot{telegram_token}/sendMessage'
              payload = {
                  'chat_id': chat_id,
                  'text': message_text,
                  'parse_mode': 'Markdown'
              }
              requests.post(telegram_api_url, data=payload)
              print('Telegram notification sent.')
          except requests.exceptions.RequestException as e:
              print(f'Error sending Telegram notification: {e}')

          if not kavita_success:
              exit(1)
          EOF
